#include <stdio.h>
#include <assert.h>

#include "file.h"
#include "inode.h"
#include "diskimg.h"

/*
 * Fetch the specified file block from the specified inode.
 * Return the number of valid bytes in the block, -1 on error.
 */
int
file_getblock(struct unixfilesystem *fs, int inumber, int blockNum, void *buf)
{
	/*
  //fprintf(stderr, "file_getblock(inumber = %d, blockNum = %d) unimplemented. returning -1\n", inumber, blockNum);
  //return -1;  
	
	struct inode inp;
	inode_iget(fs, inumber, &inp);
	
	int sectorNum = inode_indexlookup(fs, &inp, blockNum);
	int result = diskimg_readsector(fs->dfd, sectorNum, buf);
	//error check?
	
	int size = inode_getsize(&inp);
	return size;
	//use inode index lookup, read that index into a buff using diskimg_readsector
	//return what is part of the file
	//how to return valid number of bytes?
	 */
}
